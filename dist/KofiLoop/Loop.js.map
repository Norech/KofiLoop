{"version":3,"sources":["../src/KofiLoop/Loop.ts"],"names":[],"mappings":"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","file":"Loop.js","sourcesContent":["\r\nimport { startLoop, registerLoop } from './index';\r\nimport {EventEmitter} from 'events';\r\n\r\n    \r\n/**\r\n * Loop status properties.\r\n * @internal\r\n * @private\r\n */\r\nexport interface LoopStatus\r\n{\r\n    isStopped: boolean;\r\n    isPending: boolean;\r\n    lastReturnedValue: any;\r\n    lastThrownError: any;\r\n    loopStep: number;\r\n    deltaTimeStart?: [number, number];\r\n    deltaTime: number;\r\n}\r\n\r\n\r\n\r\n/**\r\n * The loop handler.\r\n * @internal\r\n * @private\r\n */\r\nexport default class Loop extends EventEmitter\r\n{\r\n    status: LoopStatus;\r\n\r\n    loopReturn: LoopReturn;\r\n    loopSelf: LoopSelf;\r\n\r\n    interval: number;\r\n    args: any[];\r\n\r\n    finishEventCalled: boolean = false;\r\n\r\n    protected loopHandler?: Promise<any> | ((this: LoopSelf, ...args: any[])=>any);\r\n\r\n    /**\r\n     * Constructor of the Loop class.\r\n     * @internal\r\n     */\r\n    constructor(handler: Promise<any> | ((this: LoopSelf, ...args: any[])=>any), interval: number, ...args: any[])\r\n    {\r\n        super();\r\n        this.setMaxListeners(50);\r\n\r\n        if(typeof interval !== \"number\")\r\n            throw new TypeError(\"Interval argument is not a number.\");\r\n\r\n        this.status = {\r\n            isStopped: true,\r\n            isPending: false,\r\n            lastThrownError: null,\r\n            lastReturnedValue: undefined,\r\n            loopStep: 1,\r\n            deltaTime: 0\r\n        };\r\n        \r\n        this.interval = interval;\r\n        this.args = args;\r\n\r\n        this.loopReturn = new LoopReturn(this);\r\n        this.loopSelf = new LoopSelf(this);\r\n\r\n        this.loopHandler = handler;\r\n\r\n        this.listenEvents();\r\n    }\r\n\r\n    measureTime(start?: [number, number]) {\r\n        if ( !start ) return process.hrtime();\r\n        var end = process.hrtime(start);\r\n        return Math.round((end[0]*1000) + (end[1]/1000000));\r\n    }\r\n\r\n    /**\r\n     * Runs the loop.\r\n     */\r\n    run()\r\n    {\r\n        if(this.status.isStopped){\r\n            this.emit('start');\r\n            this.status.isStopped = false;\r\n            this.executeStep();\r\n        } else {\r\n            throw new Error('Loop not stopped.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns if loop is stopped.\r\n     */\r\n    isStopped()\r\n    {\r\n        if((this.status.isStopped || this.status.lastThrownError != null) && !this.finishEventCalled){\r\n            this.emit('finish');\r\n            this.emit('afterFinish');\r\n            this.finishEventCalled = true;\r\n        }\r\n        return this.status.isStopped || this.status.lastThrownError != null;\r\n    }\r\n\r\n    /**\r\n     * Gets the loop return value.\r\n     */\r\n    getReturnValue()\r\n    {\r\n        return this.loopReturn;\r\n    }\r\n\r\n    /**\r\n     * Executes a step.\r\n     */\r\n    executeStep()\r\n    {\r\n        if(this.isStopped()) return;\r\n\r\n        this.emit('stepStart');\r\n        this.status.lastReturnedValue = undefined;\r\n\r\n        setTimeout(() => {\r\n            if(this.isStopped()) return;\r\n                \r\n            this.emit('stepExecute');\r\n            this.emit('afterStepExecute');\r\n\r\n            var handler = this.loopHandler;\r\n            \r\n            if(typeof handler === \"function\")\r\n            {\r\n                try\r\n                {\r\n                    var value = handler.apply(this.loopSelf, ...this.args);\r\n                    if(this.status.lastReturnedValue === undefined){\r\n                        this.status.lastReturnedValue = value;\r\n                    }\r\n                    this.finishStep();\r\n                }\r\n                catch (error)\r\n                {\r\n                    this.status.lastThrownError = error;\r\n                    this.finishStep();\r\n                }\r\n            }\r\n\r\n            // TODO: Add a full support for Promises - this one is too restricted.\r\n            else if(typeof handler !== \"undefined\" && typeof handler.then === \"function\")\r\n            {\r\n                try\r\n                {\r\n                    var loop: any = handler.then((value: any) => {\r\n                        this.status.lastReturnedValue = value;\r\n                        this.finishStep();\r\n                    })\r\n                    if(typeof loop.catch === \"function\")\r\n                    {\r\n                        loop.catch((error: any) => {\r\n                            this.status.lastThrownError = error;\r\n                            this.finishStep();\r\n                        })\r\n                    }\r\n                }\r\n                catch (error)\r\n                {\r\n                    this.status.lastThrownError = error;\r\n                    this.finishStep();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                throw new TypeError('Handler argument is not a function or a promise.');\r\n            }\r\n\r\n        }, this.interval);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Finishs the current step and starts a new step.\r\n     */\r\n    finishStep()\r\n    {  \r\n        if(!this.status.isPending)\r\n        {\r\n            this.emit('stepFinish')\r\n            this.emit('afterStepFinish');\r\n        }\r\n\r\n        if(!this.isStopped() && !this.status.isPending)\r\n            this.executeStep();\r\n    }\r\n\r\n    /**\r\n     * Registers events.\r\n     */\r\n    listenEvents()\r\n    {\r\n        var status = this.status;\r\n        \r\n        this.on('stepStart', () => \r\n        {\r\n            this.status.deltaTimeStart = <[number, number]>this.measureTime();\r\n        })\r\n\r\n        this.on('stepFinish', () =>\r\n        {\r\n            this.status.deltaTime = <number>this.measureTime(this.status.deltaTimeStart);\r\n        });\r\n\r\n        this.on('afterStepFinish', () => \r\n        {\r\n            status.loopStep++;\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n/**\r\n * Class used to interact inside of loop.\r\n * Primary used as scope ('this' reference) in loop handlers.\r\n * \r\n * @protected\r\n * @use_reference Never create the object yourself and always use reference.\r\n */\r\nexport class LoopSelf\r\n{\r\n\r\n    protected loop: Loop;\r\n\r\n    /**\r\n     * Current loop interval.\r\n     * @readonly\r\n     * @returns {number}\r\n     */\r\n    get interval(): number\r\n    {\r\n        return this.loop.interval;\r\n    }\r\n\r\n    /**\r\n     * Time difference between last step initialization and last step end.\r\n     * @readonly\r\n     * @returns {number}\r\n     */\r\n    get deltaTime(): number\r\n    {\r\n        return this.loop.status.deltaTime;\r\n    }\r\n\r\n    /**\r\n     * Current loop step.\r\n     * @readonly\r\n     * @returns {number}\r\n     */\r\n    get step(): number\r\n    {\r\n        return this.loop.status.loopStep;\r\n    }\r\n\r\n    /**\r\n     * Boolean indicating if the loop is stopped.\r\n     * @readonly\r\n     */\r\n    get isStopped()\r\n    {\r\n        return this.loop.isStopped();\r\n    }\r\n\r\n    /**\r\n     * Boolean indicating if the loop is pending.\r\n     * @readonly\r\n     */\r\n    get isPending()\r\n    {\r\n        return this.loop.status.isPending;\r\n    }\r\n\r\n    /**\r\n     * Value of the loop step.\r\n     */\r\n    set value(value: any)\r\n    {\r\n        this.loop.status.lastReturnedValue = value;\r\n    }\r\n    get value(): any\r\n    {\r\n        return this.loop.status.lastReturnedValue;\r\n    }\r\n\r\n    /**\r\n     * Constructor of the LoopSelf class.\r\n     * @hidden\r\n     */\r\n    constructor(loop: Loop)\r\n    {\r\n        this.loop = loop;\r\n\r\n        this.listenEvents();\r\n    }\r\n\r\n    /**\r\n     * Stop current loop.\r\n     */\r\n    stop(value?: any)\r\n    {\r\n        if(typeof value !== \"undefined\")\r\n            this.value = value;\r\n\r\n        this.loop.status.isStopped = true;\r\n    }\r\n\r\n    /**\r\n     * Start a subloop and pause current loop until the end of the subloop.\r\n     * @param handler The function to loop\r\n     * @param interval The interval in milliseconds\r\n     * @param args Some arguments to pass to function\r\n     * \r\n     * @see {@link LoopSelf} for handler scope ('this' reference).\r\n     */\r\n    startLoop(handler: Promise<any> | ((this: LoopSelf, ...args: any[])=>any), interval: number, ...args: any[])\r\n    {\r\n        this.loop.status.isPending = true;\r\n\r\n        return startLoop(handler, interval, ...args).parent(this.loop);\r\n    }\r\n\r\n    // EVENTS\r\n\r\n    /**\r\n     * Listen to events\r\n     * @ignore\r\n     */\r\n    protected listenEvents(){\r\n        //...\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n/**\r\n * Class returned by loops.\r\n * \r\n * @protected\r\n * @use_reference Never create the object yourself and always use reference.\r\n */\r\nexport class LoopReturn extends EventEmitter implements PromiseLike<any>\r\n{\r\n    protected loop: Loop;\r\n    protected parentLoop?: Loop;\r\n\r\n    /**\r\n     * Constructor of the Loop class.\r\n     * @hidden\r\n     */\r\n    constructor(loop: Loop)\r\n    {\r\n        super();\r\n        this.setMaxListeners(Infinity);\r\n\r\n        this.loop = loop;\r\n        this.listenEvents();\r\n    }\r\n\r\n    /**\r\n     * Boolean indicating if the loop is stopped.\r\n     * @readonly\r\n     */\r\n    get isStopped()\r\n    {\r\n        return this.loop.isStopped();\r\n    }\r\n\r\n    /**\r\n     * Boolean indicating if the loop is pending.\r\n     * @readonly\r\n     */\r\n    get isPending()\r\n    {\r\n        return this.loop.status.isPending;\r\n    }\r\n\r\n    /**\r\n     * Starts or restarts the loop.\r\n     */\r\n    run()\r\n    {\r\n        this.loop.run();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Stops the loop.\r\n     */\r\n    stop()\r\n    {\r\n        this.loop.status.isStopped = true;\r\n    }\r\n\r\n    /**\r\n     * Called when a loop step is finished.\r\n     */\r\n    step(callback: (loop: LoopSelf, value: any)=>void, step?: number)\r\n    {\r\n        if(typeof step !== \"undefined\"){\r\n            var stepInt = parseInt(step.toString());\r\n            this.on('step-' + stepInt, callback);\r\n        }else{\r\n            this.on('step', callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets a loop as parent loop.\r\n     * @param loop The parent loop\r\n     */\r\n    parent(loop: Loop)\r\n    {\r\n        if(typeof this.parentLoop !== \"undefined\")\r\n            throw new Error(\"Parent is already set\");\r\n\r\n        this.parentLoop = loop;\r\n        this.parentLoop.status.isPending = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Starts a loop after the end of the current loop.\r\n     * @param handler The function to loop\r\n     * @param interval The interval in milliseconds\r\n     * @param args Some arguments to pass to function\r\n     * \r\n     * @see {@link LoopSelf} for handler scope ('this' reference).\r\n     */\r\n    startLoop(handler: Promise<any> | ((this: LoopSelf, ...args: any[])=>any), interval: number, ...args: any[])\r\n    {\r\n        var loop = registerLoop(handler, interval, ...args)\r\n\r\n        this.loop.once('finish', () => loop.run());\r\n\r\n        return loop;\r\n    }\r\n\r\n    /**\r\n     * Called when loop is stopped.\r\n     */\r\n    end(callback: (value: any)=>any, errorCallback?: (err: any)=>any)\r\n    {\r\n        this.once('end', callback);\r\n        if(typeof errorCallback !== \"undefined\")\r\n            this.error(errorCallback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Alias for {@link end}: Called when loop is stopped.\r\n     */\r\n    then(callback: (value: any)=>any, errorCallback: (err: any)=>any)\r\n    {\r\n        return this.end(callback, errorCallback);\r\n    }\r\n\r\n    /**\r\n     * Called when an uncaught error is thrown.\r\n     */\r\n    error(callback: (err: any)=>any)\r\n    {\r\n        this.once('error', callback);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Alias for {@link error}: Called when an uncaught error is thrown.\r\n     */\r\n    catch(callback: ()=>any)\r\n    {\r\n        return this.error(callback);\r\n    }\r\n\r\n    // EVENTS\r\n\r\n    /**\r\n     * Listen to events\r\n     * @ignore\r\n     */\r\n    protected listenEvents(){\r\n        var loop = this.loop;\r\n        var status = this.loop.status;\r\n\r\n        loop.on('stepFinish', () =>\r\n        {\r\n            this.emit('step', this.loop.loopSelf, status.lastReturnedValue);\r\n            this.emit('step-' + status.loopStep, this.loop.loopSelf, status.lastReturnedValue);\r\n            return;\r\n        });\r\n\r\n        loop.once('finish', () =>\r\n        {\r\n            if(status.lastThrownError != null)\r\n            {\r\n                this.emit('error', status.lastThrownError);\r\n            }\r\n            else\r\n            {\r\n                this.emit('end', status.lastReturnedValue);\r\n            }\r\n\r\n            this.emit('terminated', this.loop);\r\n\r\n            if(this.parentLoop != null){\r\n                this.parentLoop.status.isPending = false;\r\n                this.parentLoop.finishStep();\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n"],"sourceRoot":"H:\\Dev\\Languages\\NodeJS\\Projects\\Norech\\looper/src"}